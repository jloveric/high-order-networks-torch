# model info
emsize: 200  # embedding dimension
nhid: 200  # the dimension of the feedforward network model in nn.TransformerEncoder
nlayers: 2  # the number of nn.TransformerEncoderLayer in nn.TransformerEncoder
nhead: 2  # the number of heads in the multiheadattention models
dropout: 0.2  # the dropout value
ninp: ${emsize}  # embedding size
fraction: 0.01

# Training info
max_epochs: 1
gpus: 1 
n: 5
batch_size: 16 
segments: 2
layer_type: piecewise 
train_fraction: 1.0
gradient_clip_val: 0.5
num_workers: 20
learning_rate: 1.0e-3
periodicity: 2.0

# The range of the polynomial [-2,2] when scale
# is 4.  This is important beause outside of
# the defined range the values rapidly explode
scale: 4.0

# Currently only "resnets" transformed from torchvision
# have been implemented.
model_name: resnet18

# cross_entropy or mse
loss: cross_entropy

# resize the input and output channels. new_channel = int(old_channels/rescale_planes)
rescale_planes: 1

# Whether to average the output by the number of inputs.  Important for polynomials.
rescale_output: False

# Train layer by layer or not
layer_by_layer: False

# Number of training epochs for a given layer before moving onto the next.
epochs_per_layer: 10

num_classes: 100

# Whether to clamp weights or not
clamp_weights: False
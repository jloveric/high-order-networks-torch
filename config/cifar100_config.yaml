max_epochs: 1
gpus: 1 
n: 5
batch_size: 64
segments: 2
layer_type: continuous 
train_fraction: 1.0
gradient_clip_val: 0.0
num_workers: 20
learning_rate: 1.0e-3
periodicity: 2.0
optimizer: adam

# The range of the polynomial [-2,2] when scale
# is 4.  This is important beause outside of
# the defined range the values rapidly explode
scale: 4.0

# Currently only "resnets" transformed from torchvision
# have been implemented.
model_name: resnet18

# cross_entropy or mse
loss: cross_entropy

# resize the input and output channels. new_channel = int(old_channels/rescale_planes)
rescale_planes: 1

# Whether to average the output by the number of inputs.  Important for polynomials.
rescale_output: False

# Train layer by layer or not
layer_by_layer: False

# Number of training epochs for a given layer before moving onto the next.
epochs_per_layer: 10

num_classes: 100

# Whether to clamp weights or not
clamp_weights: False

defaults:
 - override hydra/sweeper: nevergrad

hydra:
  sweeper:
    optim:
      # name of the nevergrad optimizer to use
      # OnePlusOne is good at low budget, but may converge early
      optimizer: OnePlusOne
      # total number of function evaluations to perform
      budget: 100
      # number of parallel workers for performing function evaluations
      num_workers: 10
      # maximize: true  # comment out for maximization
    # default parametrization of the search space
    parametrization:
      segments :
        init: 2
        lower: 2
        upper: 20
        integer: true
      n :
        init: 2
        lower : 2
        upper: 5
        integer: true
      optimizer :
        - adam
        - adahessian
      gradient_clip_val: 
        - 0

